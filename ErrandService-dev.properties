서버 포트 설정
server.port=8090
server.address=0.0.0.0

데이터베이스 연결 설정
spring.datasource.url=jdbc:oracle:thin:@localhost:1521/XE?oracle.jdbc.timezoneAsRegion=false
spring.datasource.username=it27
spring.datasource.password=0000
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

JPA 설정
spring.jpa.database-platform=org.hibernate.dialect.OracleDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

Hibernate 설정
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.OracleDialect
spring.jpa.hibernate.use-new-id-generator-mappings=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

시간대 설정
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jackson.time-zone=UTC

Oracle ID 생성 설정
spring.jpa.properties.hibernate.id.new_generator_mappings=true
spring.jpa.properties.hibernate.id.optimizer.pooled.prefer_lo=true

로깅 설정
logging.level.org.springframework=INFO
logging.level.com.dowadream=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

Open-In-View 설정
spring.jpa.open-in-view=false

파일 업로드 설정
file.upload-dir=./uploads

업로드 용량 제한
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Eureka 클라이언트 설정
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# 클라이언트 애플리케이션의 IP 주소와 호스트 이름 설정
eureka.instance.ip-address=43.200.98.34
eureka.instance.prefer-ip-address=true

# Eureka 서버 URL
eureka.client.service-url.defaultZone=http://admin:1234@ec2-3-35-253-143.ap-northeast-2.compute.amazonaws.com:8761/eureka

# 헬스 체크 URL (클라이언트 애플리케이션의 헬스 체크 엔드포인트)
eureka.instance.health-check-url=http://43.200.98.34:8032/actuator/health

# 재시도 설정
eureka.client.retryable=false

# Actuator 헬스 체크 엔드포인트 활성화
management.endpoints.web.exposure.include=health


###cors setting
spring.cloud.gateway.globalcors.cors-configurations.[/*].allowedOrigins=http://ec2-3-35-253-143.ap-northeast-2.compute.amazonaws.com:8088,http://ec2-3-35-253-143.ap-northeast-2.compute.amazonaws.com:3000
spring.cloud.gateway.globalcors.cors-configurations.[/*].allowedMethods=GET,POST,PUT,DELETE
spring.cloud.gateway.globalcors.cors-configurations.[/*].allowedHeaders=*
spring.cloud.gateway.globalcors.cors-configurations.[/*].allowCredentials=true
